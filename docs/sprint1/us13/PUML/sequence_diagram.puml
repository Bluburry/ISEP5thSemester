@startuml

participant Routing as route
participant StaffController as ctrl
participant StaffService as staffSvc
participant Staff as staff
participant LogsBuilder
participant StaffRepository as staffRepo
participant LogsRepository as logsRepo
participant SpecializationRepository as specRepo
participant AvailabilitySlotsRepository as avalRepo

-> route : POST(newStaffDTO, auth)
activate route
route -> ctrl : UpdateStaff(newStaffDTO, auth)
deactivate route
activate ctrl

REF OVER ctrl
Refer to generic auth SD
end ref

ctrl -> staffSvc : GetByIdAsync(licenseNumber)
deactivate ctrl
activate staffSvc

staffSvc -> staffRepo : GetStaffByLicense(licenseNumber)
deactivate staffSvc
activate staffRepo


staffRepo --> staffSvc : oldStaffDTO
deactivate staffRepo
activate staffSvc

staffSvc --> ctrl : oldStaffDTO
deactivate staffSvc
activate ctrl

ctrl --> staffSvc : UpdateAsync(newStaffDTO)
deactivate ctrl
activate staffSvc

staffSvc -> staffRepo : GetByIdAsync(licenseNumber)
deactivate staffSvc
activate staffRepo

staffRepo --> staffSvc : staff
deactivate staffRepo
activate staffSvc

staffSvc --> LogsBuilder** : create()

alt contact information altered
	staffSvc -> LogsBuilder : updateLogsWithData(NewStaffDTO)
	deactivate staffSvc
	activate LogsBuilder
	LogsBuilder --> staffSvc : log
	deactivate LogsBuilder
	activate staffSvc

	staffSvc -> logsRepo : AddAsync(log)
	deactivate staffSvc
	activate logsRepo

	logsRepo --> staffSvc : log
	deactivate logsRepo
	activate staffSvc
else contact information wasn't altered
	staffSvc -> LogsBuilder : updateLogsWithData(staffDto)
	deactivate staffSvc
	activate LogsBuilder
	LogsBuilder --> staffSvc : log
	deactivate LogsBuilder
	activate staffSvc

	staffSvc -> logsRepo : AddAsync(log)
	deactivate staffSvc
	activate logsRepo

	logsRepo --> staffSvc : log
	deactivate logsRepo
	activate staffSvc

	staffSvc -> specRepo : GetByIdAsync(specialization)
	deactivate staffSvc
	activate specRepo 

	specRepo --> staffSvc : specialization
	deactivate specRepo
	activate staffSvc

	staffSvc -> staff : changeSpecialization(specialization)
	activate staff
	staff --> staffSvc : 
	deactivate staff

	loop for each Availability in newStaffDTO 
		staffSvc -> avalRepo : GetAvailabilitySlots(staffLicense, time);
		deactivate staffSvc
		activate avalRepo

		avalRepo --> staffSvc : AvailabilitySlot
		deactivate avalRepo
		activate staffSvc

		alt AvailabilitySlot doesn't exist
			staffSvc -> avalRepo : AddAsync(Availability)
			deactivate staffSvc
			activate avalRepo 

			avalRepo --> staffSvc :
			deactivate avalRepo
			activate staffSvc

			staffSvc -> staff : AddAvailabilitySlot(Availability)
			deactivate staffSvc
			activate staff

			staff --> staffSvc :
			deactivate staff
			activate staffSvc
		else AvailabilitySlot exists
			staffSvc -> staff : AddAvailabilitySlot(AvailabilitySlot)
			deactivate staffSvc
			activate staff

			staff --> staffSvc :
			deactivate staff
			activate staffSvc
		end
	end
end 

staffSvc -> staffRepo : Update(staff)
deactivate staffSvc
activate staffRepo

staffRepo --> staffSvc :
deactivate staffRepo
activate staffSvc

staffSvc --> ctrl : log
deactivate staffSvc 
activate ctrl

alt contact information altered
	REF OVER ctrl
	Refer to email SD 
	end ref
end 

ctrl --> route : staffDTO 
deactivate ctrl
activate route 

<-- route : staffDTO
deactivate route

@enduml